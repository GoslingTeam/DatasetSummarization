DATASET METADATA:

{
  "id": "ashishvaya/recommendation-engine",
  "id_no": 16512,
  "datasetSlugNullable": "recommendation-engine",
  "ownerUserNullable": "ashishvaya",
  "usabilityRatingNullable": 0.5294117647058824,
  "titleNullable": "Recommendation Engine",
  "subtitleNullable": "Recommending the questions that a programmer should solve",
  "descriptionNullable": "### Context\n\nRecommending the questions that a programmer should solve given his/her current expertise is a big challenge for Online Judge Platforms but is an essential task to keep a programmer engaged on their platform.\n\nIn this practice problem, you are given the data of programmers and questions that they have previously solved along with the time that they took to solve that particular question.\n\nAs a data scientist, your task is to build a model that can predict the time taken to solve a problem given the user current status.\n\nThis model will help online judges to decide the next level of questions to recommend to a user.\n\n\n### Content\n\nData Files\n\n \n\nThere are 3 training data files.\n\n \n\ntrain_submissions.csv - This contains 1,55,295 submissions which are selected randomly from 2,21,850 submissions. Contains 3 columns (\u2018user_id\u2019, \u2018problem_id\u2019, \u2018attempts_range\u2019). The variable \u2018attempts_range\u2019 denoted the range no. in which attempts the user made to get the solution accepted lies.\n \n\n            We have used following criteria to define the attempts_range :-\n\n            attempts_range            No. of attempts lies inside\n\n            1                                         1-1\n\n            2                                         2-3\n\n            3                                         4-5\n\n            4                                         6-7\n\n            5                                         8-9\n\n            6                                         &gt;=10\n\n           \n\nuser_data.csv - This is the file containing data of users. It contains the following features :-\n\nuser_id - unique ID assigned to each user\nsubmission_count - total number of user submissions\nproblem_solved - total number of accepted user submissions\ncontribution - user contribution to the judge\ncountry - location of user\nfollower_count - amount of users who have this user in followers\nlast_online_time_seconds - time when user was last seen online\nmax_rating - maximum rating of user\nrating - rating of user\nrank - can be one of \u2018beginner\u2019 ,\u2019intermediate\u2019 , \u2018advanced\u2019, \u2018expert\u2019\nregistration_time_seconds - time when user was registered\n \n\nproblem_data.csv - This is the file containing data of the problems. It contains the following features :-\nproblem_id - unique ID assigned to each problem\nlevel_id - the difficulty level of the problem between \u2018A\u2019 to \u2018N\u2019\npoints - amount of points for the problem\ntags - problem tag(s) like greedy, graphs, DFS etc.\n \n\ntest_submissions.csv - This contains the remaining 66,555 submissions from total 2,21,850 submissions. Contains 1 column (ID). The \u2018attempts_range\u2019 column is to be predicted.",
  "datasetId": 16512,
  "datasetSlug": "recommendation-engine",
  "hasDatasetSlug": true,
  "ownerUser": "ashishvaya",
  "hasOwnerUser": true,
  "usabilityRating": 0.5294117647058824,
  "hasUsabilityRating": true,
  "totalViews": 6648,
  "totalVotes": 12,
  "totalDownloads": 493,
  "title": "Recommendation Engine",
  "hasTitle": true,
  "subtitle": "Recommending the questions that a programmer should solve",
  "hasSubtitle": true,
  "description": "### Context\n\nRecommending the questions that a programmer should solve given his/her current expertise is a big challenge for Online Judge Platforms but is an essential task to keep a programmer engaged on their platform.\n\nIn this practice problem, you are given the data of programmers and questions that they have previously solved along with the time that they took to solve that particular question.\n\nAs a data scientist, your task is to build a model that can predict the time taken to solve a problem given the user current status.\n\nThis model will help online judges to decide the next level of questions to recommend to a user.\n\n\n### Content\n\nData Files\n\n \n\nThere are 3 training data files.\n\n \n\ntrain_submissions.csv - This contains 1,55,295 submissions which are selected randomly from 2,21,850 submissions. Contains 3 columns (\u2018user_id\u2019, \u2018problem_id\u2019, \u2018attempts_range\u2019). The variable \u2018attempts_range\u2019 denoted the range no. in which attempts the user made to get the solution accepted lies.\n \n\n            We have used following criteria to define the attempts_range :-\n\n            attempts_range            No. of attempts lies inside\n\n            1                                         1-1\n\n            2                                         2-3\n\n            3                                         4-5\n\n            4                                         6-7\n\n            5                                         8-9\n\n            6                                         &gt;=10\n\n           \n\nuser_data.csv - This is the file containing data of users. It contains the following features :-\n\nuser_id - unique ID assigned to each user\nsubmission_count - total number of user submissions\nproblem_solved - total number of accepted user submissions\ncontribution - user contribution to the judge\ncountry - location of user\nfollower_count - amount of users who have this user in followers\nlast_online_time_seconds - time when user was last seen online\nmax_rating - maximum rating of user\nrating - rating of user\nrank - can be one of \u2018beginner\u2019 ,\u2019intermediate\u2019 , \u2018advanced\u2019, \u2018expert\u2019\nregistration_time_seconds - time when user was registered\n \n\nproblem_data.csv - This is the file containing data of the problems. It contains the following features :-\nproblem_id - unique ID assigned to each problem\nlevel_id - the difficulty level of the problem between \u2018A\u2019 to \u2018N\u2019\npoints - amount of points for the problem\ntags - problem tag(s) like greedy, graphs, DFS etc.\n \n\ntest_submissions.csv - This contains the remaining 66,555 submissions from total 2,21,850 submissions. Contains 1 column (ID). The \u2018attempts_range\u2019 column is to be predicted.",
  "hasDescription": true,
  "isPrivate": false,
  "keywords": [
    "computer science",
    "programming"
  ],
  "licenses": [
    {
      "nameNullable": "unknown",
      "name": "unknown",
      "hasName": true
    }
  ],
  "collaborators": [],
  "data": []
}

DATASET FILES CONTENTS:

Data\ashishvaya\recommendation-engine\recommendation-engine\problem_data.csv
b'problem_id,level_type,points,tags\nprob_3649,H,,\nprob_6191,A,,\nprob_2020,F,,\nprob_313,A,500.0,"greedy,implementation"\nprob_101,A,500.0,"constructive algorithms,greedy,math"\nprob_1479,E,,\nprob_2940,B,,\nprob_3059,B,5.0,brute force\nprob_1958,D,,\nprob_6154,C,,\nprob_4069,B,1000.0,"dfs and similar,dsu,graphs"\nprob_4926,A,500.0,implementation\nprob_3154,K,,\nprob_1538,A,,\nprob_3750,B,1000.0,math\nprob_4440,I,,\nprob_4569,A,,\nprob_4189,D,,\nprob_526,D,2000.0,"math,number theory"\nprob_5498,I,,\nprob_3216,F,,\nprob_1412,C,1500.0,"brute force,dp,number theory"\nprob_5088,B,,\nprob_5693,D,2000.0,"brute force,dfs and similar,graphs"\nprob_75,A,500.0,implementation\nprob_1035,I,,\nprob_2822,C,,"data structures,expression parsing,math"\nprob_3277,D,2000.0,"dfs and similar,greedy"\nprob_3284,,,\nprob_3714,D,,\nprob_1552,C,,\nprob_2092,E,,\nprob_4119,B,,\nprob_1397,B,1000.0,"bitmasks,brute force,dfs and similar,expression parsing,implementation"\nprob_5862,G,,"constructive algorithms,divide and conquer,implementation"\nprob_6212,A,500.0,"brute for'
Data\ashishvaya\recommendation-engine\recommendation-engine\sample_submissions_wbscxqU.csv
b'ID,attempts_range\r\n'
Data\ashishvaya\recommendation-engine\recommendation-engine\submission.csv
b'ID,attempts_range\r\nuser_856_prob_5822,1\r\nuser_2642_prob_2334,1\r\nuser_2557_prob_2920,1\r\nuser_1572_prob_4598,1\r\nuser_295_prob_6139,1\r\nuser_1202_prob_6253,1\r\nuser_1017_prob_2630,1\r\nuser_2907_prob_6360,1\r\nuser_3473_prob_4350,1\r\nuser_401_prob_1966,1\r\nuser_689_prob_791,1\r\nuser_285_prob_5518,1\r\nuser_367_prob_4425,1\r\nuser_1580_prob_1728,1\r\nuser_1562_prob_6500,1\r\nuser_2464_prob_2429,1\r\nuser_3519_prob_4971,1\r\nuser_1620_prob_2998,1\r\nuser_1207_prob_3335,1\r\nuser_792_prob_6173,2\r\nuser_3380_prob_51,1\r\nuser_1160_prob_5804,1\r\nuser_2860_prob_5661,1\r\nuser_1086_prob_4967,2\r\nuser_1356_prob_3508,2\r\nuser_344_prob_5186,1\r\nuser_3166_prob_574,1\r\nuser_1559_prob_767,2\r\nuser_56_prob_2872,1\r\nuser_1691_prob_5781,1\r\nuser_1758_prob_5067,1\r\nuser_1631_prob_4971,1\r\nuser_2546_prob_2939,1\r\nuser_698_prob_3548,1\r\nuser_785_prob_1675,1\r\nuser_1245_prob_2334,1\r\nuser_2975_prob_5932,1\r\nuser_1523_prob_3641,1\r\nuser_180_prob_5736,1\r\nuser_1650_prob_1279,1\r\nuser_3255_prob_5040,2\r\nuser_347_prob_1128,1\r\nuser_3076_prob_4407,2\r\nuser_3075_prob_6118,1\r\nuser_2969_pr'
Data\ashishvaya\recommendation-engine\recommendation-engine\test_submissions_NeDLEvX.csv
b'ID,user_id,problem_id\r\nuser_856_prob_5822,user_856,prob_5822\r\nuser_2642_prob_2334,user_2642,prob_2334\r\nuser_2557_prob_2920,user_2557,prob_2920\r\nuser_1572_prob_4598,user_1572,prob_4598\r\nuser_295_prob_6139,user_295,prob_6139\r\nuser_1202_prob_6253,user_1202,prob_6253\r\nuser_1017_prob_2630,user_1017,prob_2630\r\nuser_2907_prob_6360,user_2907,prob_6360\r\nuser_3473_prob_4350,user_3473,prob_4350\r\nuser_401_prob_1966,user_401,prob_1966\r\nuser_689_prob_791,user_689,prob_791\r\nuser_285_prob_5518,user_285,prob_5518\r\nuser_367_prob_4425,user_367,prob_4425\r\nuser_1580_prob_1728,user_1580,prob_1728\r\nuser_1562_prob_6500,user_1562,prob_6500\r\nuser_2464_prob_2429,user_2464,prob_2429\r\nuser_3519_prob_4971,user_3519,prob_4971\r\nuser_1620_prob_2998,user_1620,prob_2998\r\nuser_1207_prob_3335,user_1207,prob_3335\r\nuser_792_prob_6173,user_792,prob_6173\r\nuser_3380_prob_51,user_3380,prob_51\r\nuser_1160_prob_5804,user_1160,prob_5804\r\nuser_2860_prob_5661,user_2860,prob_5661\r\nuser_1086_prob_4967,user_1086,prob_4967\r\nuser_1356_prob_3508,user_1356,prob_35'
Data\ashishvaya\recommendation-engine\recommendation-engine\train_submissions.csv
b'user_id,problem_id,attempts_range\nuser_232,prob_6507,1\nuser_3568,prob_2994,3\nuser_1600,prob_5071,1\nuser_2256,prob_703,1\nuser_2321,prob_356,1\nuser_1569,prob_6064,1\nuser_3293,prob_1237,1\nuser_915,prob_4125,2\nuser_2032,prob_1943,1\nuser_1410,prob_3935,1\nuser_2085,prob_5436,1\nuser_1810,prob_3431,2\nuser_1287,prob_3474,1\nuser_2063,prob_2872,1\nuser_724,prob_6043,2\nuser_88,prob_1914,2\nuser_2269,prob_5641,1\nuser_489,prob_522,1\nuser_1997,prob_32,1\nuser_1929,prob_5731,2\nuser_2084,prob_4232,1\nuser_923,prob_3508,2\nuser_150,prob_6488,1\nuser_2898,prob_1605,1\nuser_3086,prob_2605,1\nuser_2552,prob_534,1\nuser_508,prob_3073,1\nuser_1910,prob_6442,4\nuser_1066,prob_106,1\nuser_1637,prob_1482,1\nuser_2561,prob_164,2\nuser_812,prob_5804,1\nuser_2340,prob_6426,2\nuser_1912,prob_1149,3\nuser_3185,prob_1346,1\nuser_1102,prob_1047,1\nuser_1150,prob_3038,1\nuser_771,prob_5954,3\nuser_1155,prob_6321,1\nuser_3221,prob_1084,2\nuser_2307,prob_2811,1\nuser_2906,prob_620,4\nuser_1828,prob_4076,1\nuser_194,prob_6266,1\nuser_3155,prob_1095,1\nuser_3568,prob_4278,1'
Data\ashishvaya\recommendation-engine\recommendation-engine\user_data.csv
b'user_id,submission_count,problem_solved,contribution,country,follower_count,last_online_time_seconds,max_rating,rating,rank,registration_time_seconds\nuser_3311,47,40,0,,4,1504111645,348.337,330.849,intermediate,1466686436\nuser_3028,63,52,0,India,17,1498998165,405.677,339.45,intermediate,1441893325\nuser_2268,226,203,-8,Egypt,24,1505566052,307.339,284.404,beginner,1454267603\nuser_480,611,490,1,Ukraine,94,1505257499,525.803,471.33,advanced,1350720417\nuser_650,504,479,12,Russia,4,1496613433,548.739,486.525,advanced,1395560498\nuser_3177,3,1,0,,0,1484244659,331.135,331.135,intermediate,1484233893\nuser_2032,216,199,0,India,28,1505534677,387.328,387.328,intermediate,1443374825\nuser_3306,2,1,0,,0,1505568051,304.186,281.25,beginner,1484233261\nuser_1483,91,79,0,,0,1502437836,318.807,258.888,beginner,1472711718\nuser_667,91,71,0,,4,1494953565,383.028,362.959,intermediate,1403610149\nuser_2871,12,12,0,China,16,1494188847,484.805,484.805,advanced,1437614555\nuser_972,473,441,0,Indonesia,88,1486246510,491.112,403.67,intermedia'

Use DATASET METADATA and DATASET FILES CONTENTS to compose a dataset summary that has ONLY the following sections:
1) "What this data is about": a single paragraph that describes the data in general without details
2) "How this data could be used": a short list of the potential uses of the data in general without details

